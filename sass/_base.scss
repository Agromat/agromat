@import "compass/css3";

// sprites
$icons: sprite-map("icons/*.png");

// responsive
$break-1: 320px;
$break-2: 480px;
$break-3: 768px;
$break-4: 1024px;
$break-5: 1280px;
@mixin respond-to($media) {
  @if $media == mob {
    @media only screen and (max-width: $break-1) { @content; }
  }
  @else if $media == mob-lan {
    @media only screen and (max-width: $break-2) { @content; }
  }
  @else if $media == pda {
    @media only screen and (max-width: $break-3) { @content; }
  }
  @else if $media == med {
    @media only screen and (max-width: $break-4) { @content; }
  }
  @else if $media == wide {
    @media only screen and (max-width: $break-5) { @content; }
  }
}

@mixin retina{
  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2) {
    @content;
  }
}

/* BACKGROUND SIZE */ 
@mixin background-size($width: 100%, $height: 100%) { 
     -moz-background-size: $width $height;
  -webkit-background-size: $width $height;
          background-size: $width $height;
}
/* ROTATE*/
@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
     -moz-transform: rotate($deg + deg);
       -o-transform: rotate($deg + deg);
  -webkit-transform: rotate($deg + deg);
      -ms-transform: rotate($deg + deg);
          transform: rotate($deg + deg);
             filter: progid:DXImageTransform.Microsoft.Matrix(
                     M11=$m11, M12=$m12,M21=$m21, M22=$m22, sizingMethod='auto expand'); 
               zoom: 1;
}

/* TRANSITION */
@mixin transition($what: all, $length: 1s, $easing: ease-in-out) {
    -moz-transition:    $what $length $easing;
    -o-transition:      $what $length $easing;
    -webkit-transition: $what $length $easing;
    -ms-transition:     $what $length $easing;
    transition:         $what $length $easing;
}

@mixin animation($what: all, $length: 1s, $easing: ease-in-out, $iteration:infinite, $fillmode:none) {
    -moz-animatiom:    $what $length $easing 0s $iteration normal $fillmode;
    -webkit-animation: $what $length $easing 0s $iteration normal $fillmode;
    -o-animation:      $what $length $easing 0s $iteration normal $fillmode;
    animation:         $what $length $easing 0s $iteration normal $fillmode;
}
// image replacement
@mixin hide-text{
    font: 0/0 a; 
    text-shadow: none;
    color: transparent;
}
@mixin clr {
  &:after,
  &:before {
    content: " ";
    display: table;
    }
  &:after {
    clear: both;
  }
  *zoom: 1;
}
@mixin image-size($path){
  width: image-width($path);
  height: image-height($path);
}
@mixin sized-sprite($map, $sprite){
  background: sprite($map, $sprite) no-repeat;
  @include image-size(sprite-file($map, $sprite));
}
@mixin pfd_r{
    font-weight: normal;
    font-family: 'pf_din_text_comp_proregular', sans-serif;
}
@mixin pfd_m{
    font-weight: normal;
    font-family: 'pf_din_text_comp_pro_mediumRg', sans-serif;
}
@mixin pfd_b{
    font-weight: normal;
    font-family: 'pf_din_text_comp_probold', sans-serif;
}
@mixin hel_n{
    font-weight: normal;
    font-family: 'helveticaneuecyrroman', sans-serif;
}
@mixin hel_b{
    font-weight: normal;
    font-family: 'helveticaneuecyrbold', sans-serif;
}